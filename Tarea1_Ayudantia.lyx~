#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Tarea 1 Ayudantia 
\begin_inset Quotes eld
\end_inset

Metodolodias de Desarrollo de Software
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Author
Fernando Rubilar, Sebastian Ceron, Ignacio Briones
\end_layout

\begin_layout Abstract
El desarrollo de software no es una tarea fácil.
 Prueba de ello es que existen numerosas propuestas metodológicas que inciden
 en distintas dimensiones del proceso de desarrollo.
 Por una parte tenemos aquellas propuestas más tradicionales que se centran
 especialmente en el control del proceso, estableciendo rigurosamente las
 actividades involucradas, los artefactos que se deben producir, y las herramien
tas y notaciones que se usarán.
 Estas propuestas han demo strado ser efectivas y necesarias en un gran
 número de proyectos, pero también han presentado problemas en otros muchos.
 Una posible mejora es incluir en los procesos de desarrollo más actividades,
 más artefactos y más restricciones, basándose en los puntos débiles detectados.
 Sin embargo, el resultado final sería un proceso de desarrollo más complejo
 que puede incluso limitar la propia habilidad del equipo para llevar a
 cabo el proyecto.
 Otra aproximación es centrarse en otras dimensiones, como por ejemplo el
 factor humano o el producto software.
 Esta es la filosofía de las metodologías ágiles, las cuales dan mayor valor
 al individuo, a la colaboración con el cliente y al des arrollo incremental
 del software con iteraciones muy cortas .
 Este enfoque está mostrando su efectividad en proyectos con requisitos
 muy cambiantes y cuando se exige reducir drásticamente los tiempos de desarroll
o pero manteniendo una alta calidad.
 Las metodologías ágiles están revolucionando la manera de producir software,
 y a la vez generando un amplio debate entre sus seguidores y quienes por
 escepticismo o convencimiento no las ven como alternativa para las metodologías
 tradicionales.
 En este trabajo se presenta dos ejemplos de metodologias, una agil (eXtre
 me Programming, XP) y otra tradicional y posterioremente se hara un cuadro
 comparativo entre ellas.
 
\end_layout

\begin_layout Paragraph

\end_layout

\end_body
\end_document
